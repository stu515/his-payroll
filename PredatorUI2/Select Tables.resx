<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnOk.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhPgAdAPcAAP///+n1/Obz++by/+Xx/+Pv/uLx+uDt/d7v+t3r/Nvt+drp+9fr+NTp+NHn97DH
        5P/9//30/v77//Ll+fv5/fP1/ARDlRFNmx5XoixiqTdrrztusEd3tlF/vFSBvGqTyI6u2J674qXA46nD
        56zG6bTM67DH5cLX9MTZ9cba9snc9t3n9Dpur26WyXCZyXGYyoSn1Ji33a3J66/I57HI5bXL57fM57rP
        6r3T7bnO58XZ8szf98/h+NPk+dbm+tbi8eTr9Mre9dLl+qfM88zh98/j+Ofz/7/Z8N7s+czk9s7l99bn
        9Nzr9+j1/+Dy/uXy++Tx+uj3/+by+NHn8OXy9uz7/9fr7d7u7vX///r+/v7///3+/r7a18Xc2c/l4dbf
        26vUuKrPtJ3NqeL05pfDnqbLrLvevoCxfFicT12gVWOmW2KfWm+sZz6NMTSCJTyMLkGPM0uUPn+5dMLl
        u8rmxTODIBp8Ai1+GDKCHCJ+ByuADzCLEd7w2Pf99TOGE0iPLF61PWK1QbfXqzSaCT2aFTiPFDyVFUGf
        GEepG0WkGj6YGEekHXrEWV6QSdru0UmlFz2BGU+oIV2+KVidNGy3Rnu4W4rFapjTeE+xFlCrGlOyHV28
        JletI2XELWe2Oo7RaF7GHGrUJGfJJkuUHFuzI3LCPnO6RojPWZbgZbnnnHTfJGK+IHXcKmC5I3TWK2W6
        J3DPLGS3J27LLHPNMEmGH3fXM2u9L2+/NH3JRZbdYom+Y6XQh8bqq83ws9fryef23Pv/+GrJIn3jLme6
        KGSvKXrKO4TBVnbUJn7aL4rpNoDcM1+iJpLmTIbJTMTtoPH464bhL4niM4zlOY3gP5fwRdr0wZbsQJPm
        P5rqSarrZcz2oMLnnNr2vpvrQaTuS8basOT4za7yV7f1ZcD6dbzzecr7isPujtj7q/f/7cD3dMX6erzs
        euLq18H2buL8uu391ND7h+D8svv/9Mz4e9n7mef6w/H73uz40+P8qfX85f3++vP7y////fr55+nm4O7w
        8iH5BAEAAP8ALAAAAAA+AB0AAAj/AIcMIfGgoMGDCBMqXMiw4QMSAoeYAKIFgMWLGDNq3MixY8ctK0wM
        kbECAJYqAVKqXMmypcuXMF1WyQLghwwTWbII2Mmzp8+fQIMKHSoAQIUZNgBEMcC0qVMDXsqcWRMnTpoz
        Zbw83cq1q9cqWx7kAICgrNmzVsqkiQPnjds2VdWEsXK2rt27eM06ASAWgIK/gAF3WXPHTR08dxLjqVPH
        zR02XQJLnky5MmC+Yxlo3qyZSyM9evwUMkSIkKJRtCCBzhOHC+fXsGPL1owZQIPbuBtMQZNnj6FDiRIh
        Go5o0aJDivbYUTMlt/Pn0KM3qO2gunUHZPIoisSJlPdW4MFr/3qUKZKhPGWuq1/Pvr2D2kriy+cyadQy
        YrFe6R82zNatVbd8s0sxtvzRmnwIJhifCywo6KAStSUh4YRiDLKJLLCEAkoorLjCCiuhlOIIAL6UEsom
        g4Ax4YRHcGCBBRnEICGDK9ZYY20n5KgjG5rUoswxxewyizDRJKMKLnxY5IgprtSCiRw66shBBiOc0MEF
        VX6gQZRcclkbCmCGGYgs0kCDCx0AfFMMNdLgwo5FvngSzDTTiAJImGCGYEEIYWbwAQpaohDCBXziaWht
        KSSqqCTCdIOMMc8AAIGazTgCAQS+UCKLNd04uomiicJgAagddJCCliQQCuqqidamwquwdv+SjDfY3GJJ
        pPzw4guclOCSTTjheBNNJ7C+KmqxHnigQgsYYBBDsdDCWtsO1FaLizXhiJNNKbdGQEEFEdBhyinkpCPO
        uW1WS60IFohQbQYt7NCCBRhwoO691dbGw778XoJNO+Oos44puvgDxATfUPJJOQyrM84411zCL78sZFAC
        Dx5ccPELLLD7wsQg71tbDySXbAYz8zBMjzmM6PKFIJRccg4+9NADDzzqTENHySXr4CKMMZD8wgY9gGAB
        DDwn3UNtPjTt9BSowFNzPO7wYkkllexSz9bunHMOPeTksoTTZJdt9tll17bA2mwvMMc6+MRTzz32OLKL
        IL/Y887e7tTlE082dLQt+OCEF75AbQkkrngCTKRyzjvg5NNPPpSjY3k+eu+jTSpILO7556CHnkBtB5Ru
        eulWOHNP5fIAA0zr8lxezTZXnG777bjnXnptBfTuu+9X9AJOH1tIwE8W+iQPQB/c9HLF79BHL/30vRPA
        V1JNEKD99ttDwUc198gDQEXLg8MNH09wr/767Le/PVg00JAFFgPUb//9A1AxBjjVcOO/I2OQAv4GSMAC
        FtAIWqhADW5QEiw0wYAQjKAEIRgFLNQEB0SgARA8wsEOevAjK6BBEYQQhBs45IQoTCFCaHCDHQghIAA7
</value>
  </data>
</root>